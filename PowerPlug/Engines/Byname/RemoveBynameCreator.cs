using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Management.Automation;
using System.Text;
using System.Threading.Tasks;
using PowerPlug.BaseCmdlets;
using PowerPlug.PowerPlugFile;

namespace PowerPlug.Engines.Byname
{
    public class RemoveBynameCreator : BynameCreatorBase
    {

        protected BynameBase AliasCmdlet { get; }

        protected const string RemoveAliasCommand = "Remove-Alias";

        public RemoveBynameCreator(PowerPlug.BaseCmdlets.BynameBase cmdlet) : base(cmdlet)
        {
            AliasCmdlet = cmdlet;
        }

        public override Collection<PSObject> RunCommand(string realCommand) 
            => PowerShell.Create(RunspaceMode.CurrentRunspace)
                .AddCommand(realCommand)
                .AddParameter("Name", AliasCmdlet.Name)
                .AddParameter("Scope", AliasCmdlet.Scope)
                .AddParameter("Force", AliasCmdlet.Force)
                .Invoke();
        
        public override void Execute()
        {
            //Run Remove
            foreach (var r in RunCommand(RemoveAliasCommand))
            {
                AliasCmdlet.WriteObject(r);
            }
            RemoveBynameFromFile(this.AliasCmdlet, ProfileInfo);
        }

        internal static void RemoveBynameFromFile(BynameBase bb, PowerPlugFileBase powerPlugFile)
        {
            bool Del(string s) => s.StartsWith($"New-Alias -Name {bb.Name}");
            var line = powerPlugFile.FindInFile(Del);

            if (line == -1) { return; }

            var ln = powerPlugFile.GetValueAtLine(line);
            var lns = ln.Substring(ln.IndexOf("New-Alias", StringComparison.Ordinal));
            var value = lns.Split(' ')[4];
            var checkFunction = powerPlugFile.FindInFile(s => s.StartsWith($"function {value}"));

            if (checkFunction != -1)
            {
                powerPlugFile.RemoveLine(checkFunction);
            }

            powerPlugFile.RemoveLine(powerPlugFile.FindInFile(s => s == "# Autogenerated Profile Alias - Do Not Modify"));
            powerPlugFile.RemoveLine(powerPlugFile.FindInFile(Del));
        }
    }
}